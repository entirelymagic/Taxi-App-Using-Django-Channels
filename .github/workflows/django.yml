# name of our workflow
name: Django CI Workflow

# triggers for our workflow
on:
  # opening a pull request to master and develop branch will be a trigger
  pull_request:
    branches:
      - main
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - main


# three job definition
jobs:
  health-check-job: # health check job for testing and code formatting check
    defaults:
      run:
        working-directory: ./server
    runs-on: ubuntu-latest # os for running the job
    env: # Django Settings + Slack Webhook
      DJANGO_SETTINGS_MODULE: taxi.settings.testing
      TAXI_DJANGO_SETTINGS_MODULE: taxi.settings.testing
      DATABASE_NAME: github-actions
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      # POETRY_VIRTUALENVS_CREATE: false
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    services:
      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres:14
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github-actions
        ports:
          - 5437:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: x64

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.11
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-v1-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install Package
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run migrations
      #----------------------------------------------
      - name: Run Migrations # run migrations to create table in side car db container
        run: |
          source $VENV
          python manage.py migrate
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run Test # running tests
        run: |
          source $VENV
          python manage.py test trips

      - uses: act10ns/slack@v1  # post workflow status to slack
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#private_pytthon_messages'
        if: always()
